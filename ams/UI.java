/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ams;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ritz619
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    private int penalty = 150;
    public Connection con;
    public UI ui;
    private boolean flag;
    public int UserID;
    public Login lg;
    
    public UI(Connection con, int uid, String uname) {
        this.UserID = uid;
        initComponents();
        settitle(uname);
        this.setTitle("Airline Management System");
        DefaultTableModel tableModel = (DefaultTableModel) jXTable1.getModel();
        tableModel.setColumnIdentifiers(new String[]{
            "Flight ID", "Name", "Departure", "Arrival", "Vacancy", "Total Fare"
        });
        tableModel.setRowCount(0);
        jXTable3.setModel(tableModel);
        this.flag = true;
        this.con = con;
        date.setDate(new java.util.Date());
        try {
            ArrayList<String> str = new ArrayList<>();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select name from cities");
            int i = 0;
            while(rs.next()) {
                str.add(rs.getString(1));
                i++;
            }
            cls.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"First class","Buisness class","Economy class"}));
            from.setModel(new javax.swing.DefaultComboBoxModel(str.toArray()));
            to.setModel(new javax.swing.DefaultComboBoxModel(str.toArray()));
            to.setSelectedIndex(2);
        } catch (SQLException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public final void settitle(String uname){
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Welcome " + uname, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jXTable2 = new org.jdesktop.swingx.JXTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        from = new javax.swing.JComboBox();
        to = new javax.swing.JComboBox();
        date = new org.jdesktop.swingx.JXDatePicker();
        cls = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jXTable3 = new org.jdesktop.swingx.JXTable();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jXTable1);

        jXTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jXTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Welcome to AMS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18))); // NOI18N
        jPanel2.setToolTipText("");

        jLabel1.setText("From");

        jLabel2.setText("To:");

        jLabel3.setText("Date:");

        jLabel4.setText("Class");

        from.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        to.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        cls.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clsActionPerformed(evt);
            }
        });

        jButton1.setText("Update profile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Modify booking");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Get Flights");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jXTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jXTable3);

        jButton2.setText("Get Old Bookings");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Cancel booking");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Book ticket");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(from, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cls, date, from, to});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jButton7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(cls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toActionPerformed

    private void clsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clsActionPerformed

    public void modtable2(){
        String From = from.getSelectedItem().toString();
        String To = to.getSelectedItem().toString();
        Date Dt = null;
        try{
            Dt = new java.sql.Date(date.getDate().getTime());
        }catch(Exception e){
            JOptionPane.showMessageDialog(ui, "Choose a date");
            return;
        }
        String Class = cls.getSelectedItem().toString();
        Map<String, String> map = new HashMap<>();
        Map<String, String> map1 = new HashMap<>();
        map.put("First class", "vac_f");
        map.put("Buisness class", "vac_b");
        map.put("Economy class", "vac_e");
        map1.put("First class", "fare_f");
        map1.put("Buisness class", "fare_b");
        map1.put("Economy class", "fare_e");
        String fareclmn = map1.get(Class);
        String clsclmn = map.get(Class);
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from route where start = '" + From + "' and dest = '"+ To +"'");
            if(rs.next()) {
                String start = rs.getString("start");
                String dest = rs.getString("dest");
                String w = rs.getString("flightlist").replaceAll(" ", " OR ");
                String sql = "select * from flight where id = " + w;
                st = con.createStatement();
                rs = st.executeQuery(sql);
                ArrayList<String> name = new ArrayList<>();
                ArrayList<String> depttime = new ArrayList<>();
                ArrayList<String> arrivtime = new ArrayList<>();
                ArrayList<String> fare = new ArrayList<>();
                ArrayList<String> vacancy = new ArrayList<>();
                ArrayList<String> num = new ArrayList<>();
                ArrayList<String> planeid = new ArrayList<>();
                while(rs.next()) {
                    if(rs.getString("departure").split(" ")[0].equals(Dt.toString())){
                        planeid.add(rs.getString("planeID"));
                        num.add(rs.getString("id"));
                        vacancy.add(rs.getString(clsclmn));
                        name.add(rs.getString("name"));
                        depttime.add(rs.getString("departure").split(" ")[1]);
                        arrivtime.add(rs.getString("arrival").split(" ")[1]);
                        fare.add(String.valueOf(Integer.parseInt(rs.getString(fareclmn)) + Integer.parseInt(rs.getString("basic"))));
                    }
                }
                if(depttime.isEmpty()){
                    DefaultTableModel tableModel = (DefaultTableModel) jXTable3.getModel();
                    tableModel.setRowCount(0);
                    tableModel.setColumnIdentifiers(new String[]{
                        "Flight ID", "Name", "Departure", "Arrival", "Vacancy", "Total Fare"
                    });
                    jXTable3.setModel(tableModel);
                    JOptionPane.showMessageDialog(ui, "No such flights available");
                    return;
                }
                DefaultTableModel tableModel = (DefaultTableModel) jXTable3.getModel();
                tableModel.setColumnIdentifiers(new String[]{
                    "Flight ID", "Name", "Departure", "Arrival", "Vacancy", "Total Fare","Plane ID"
                });
                tableModel.setRowCount(0);
                flag = true;
                for (int i = 0; i < name.size(); i++) {
                    String[] data = new String[7];
                    data[0] = num.get(i);
                    data[1] = name.get(i);
                    data[2] = depttime.get(i);
                    data[3] = arrivtime.get(i);
                    data[4] = vacancy.get(i);
                    data[5] = fare.get(i);
                    data[6] = planeid.get(i);
                    tableModel.addRow(data);
                }
                jXTable3.setModel(tableModel);
                tableModel.fireTableDataChanged();
            }else{
                DefaultTableModel tableModel = (DefaultTableModel) jXTable3.getModel();
                tableModel.setRowCount(0);
                jXTable3.setModel(tableModel);
                JOptionPane.showMessageDialog(ui, "No such flights available");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        modtable2();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int index = jXTable3.getSelectedRow();
        if(index < 0 || !flag){
            JOptionPane.showMessageDialog(ui, "Select a flight!");
            return;
        }
        Map<String, String> map = new HashMap<>();
        map.put("First class", "capacity_f");
        map.put("Buisness class", "capacity_b");
        map.put("Economy class", "capacity_e");
        String ID = String.valueOf(jXTable3.getValueAt(index,0));
        String Fare = String.valueOf(jXTable3.getValueAt(index,5));
        String vacant = String.valueOf(jXTable3.getValueAt(index, 4));
        String Class = String.valueOf(cls.getSelectedItem());
        String planeid = String.valueOf(jXTable3.getValueAt(index,6));
        String capacity = map.get(Class);
        int seatno = 1;
        Statement st;
        String cap = null;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select "+capacity+" from plane where id = " + planeid);
            if(rs.next()) {
                cap = String.valueOf(rs.getString(capacity));
            }
        } catch (SQLException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        Booking b = new Booking();
        b.setClss(Class);
        b.setFlightid(Integer.parseInt(ID));
        b.setUserid(UserID);
        b.setFare(Integer.parseInt(Fare));
        Conf c = new Conf(b, con, Integer.parseInt(cap), Integer.parseInt(Fare), Integer.parseInt(vacant));
        c.ui = ui;
        c.setVisible(true);        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        modtable();
    }//GEN-LAST:event_jButton2ActionPerformed

    public void modtable(){
        flag = false;
        DefaultTableModel tableModel = (DefaultTableModel) jXTable3.getModel();
        tableModel.setColumnIdentifiers(new String[]{
            "Booking ID", "Status", "Fare","Seat No", "Flight ID", "Class"
        });
        tableModel.setRowCount(0);
        Statement st;
        ResultSet rs;
        try {
            st = con.createStatement();
            rs = st.executeQuery("select * from booking where userid = " + UserID);
            while(rs.next()) {
                String[] data = new String[6];
                data[0] = rs.getString("id");
                data[1] = rs.getString("status");
                data[2] = rs.getString("fare");
                data[3] = rs.getString("seatno");
                data[4] = rs.getString("flightid");
                data[5] = rs.getString("class");
                tableModel.addRow(data);
            }
            jXTable3.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int index = jXTable3.getSelectedRow();
        if(index < 0 || flag){
            JOptionPane.showMessageDialog(ui, "Select a booking!");
            return;
        }
        String ID = String.valueOf(jXTable3.getValueAt(index,0));
        char st = String.valueOf(jXTable3.getValueAt(index,1)).charAt(0);
        String fare = String.valueOf(jXTable3.getValueAt(index, 2));
        String Class = String.valueOf(jXTable3.getValueAt(index, 5));
        String flightid = String.valueOf(jXTable3.getValueAt(index,4));
        String seatno = String.valueOf(jXTable3.getValueAt(index,3));
        Booking b = new Booking();
        b.setId(Integer.parseInt(ID));
        b.setClss(Class);
        b.setStatus(st);
        b.setUserid(UserID);
        b.setFlightid(Integer.parseInt(flightid));
        b.setSeatno(Integer.parseInt(seatno));
        b.setFare(Integer.parseInt(fare));
        Date curDt = new java.sql.Date((new java.util.Date()).getTime());
        String sql = "select departure from flight where id = " + flightid;
        Statement sta;
        String dep;
        Date depDt = null;
        try {
            sta = con.createStatement();
            ResultSet rs = sta.executeQuery(sql);
            if(rs.next()){
                dep = rs.getString("departure").split(" ")[0];
                System.out.println(dep);
                depDt = java.sql.Date.valueOf(dep);
            }
            System.out.println(depDt+"  "+curDt);
            if(curDt.after(depDt)){
                JOptionPane.showMessageDialog(this, "Departure date already passed");
                return;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        ui.setVisible(false);
        Mod m = new Mod(con,b);
        m.ui = ui;
        m.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SignUp su = new SignUp(true,con,UserID);
        su.s = su;
        su.ui = ui;
        su.UserID = UserID;
        ui.setVisible(false);
        su.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int index = jXTable3.getSelectedRow();
        if(index < 0 || flag){
            JOptionPane.showMessageDialog(ui, "Select a booking!");
            return;
        }
        Map<String, String> map = new HashMap<>();
        map.put("First class", "vac_f");
        map.put("Buisness class", "vac_b");
        map.put("Economy class", "vac_e");
        String St = String.valueOf(jXTable3.getValueAt(index,1));
        String flightid = String.valueOf(jXTable3.getValueAt(index, 4));
        if("c".equals(St)){
            JOptionPane.showMessageDialog(ui, "Ticket already cancelled");
            return;
        }
        String ID = String.valueOf(jXTable3.getValueAt(index,0));
        int q = JOptionPane.showConfirmDialog(this,"Confirm cancellation?","AMS",JOptionPane.YES_NO_OPTION);
        if(q == 0){
            String sql = "select fare,class from booking where id = " + ID;
            Statement st;
            String fare = null, Cls = null, vacclmn = null;
            try {
                st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if(rs.next()){
                    fare = rs.getString("fare");
                    fare = String.valueOf(penalty);                    
                    Cls = rs.getString("class");
                    vacclmn = map.get(Cls);
                }
            } catch (SQLException ex) {
                Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
            }   
            sql = "update booking set status ='c',fare="+fare+" where id = " + ID;
            try {
                st = con.createStatement();
                st.executeUpdate(sql);
                sql = "select " + vacclmn + " from flight where id = " + flightid;
                ResultSet rs = st.executeQuery(sql);
                String vacno = null;
                if(rs.next()){
                    vacno = rs.getString(vacclmn);
                    vacno = String.valueOf(Integer.parseInt(vacno) + 1);
                }
                sql = "update flight set "+vacclmn+"='"+vacno+"' where id = " + flightid;
                st.executeUpdate(sql);
                modtable();
                JOptionPane.showMessageDialog(this,"Money Refunded after deductions");
                JOptionPane.showMessageDialog(this, "Booking Cancelled");
            } catch (SQLException ex) {
                Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
        lg.Clear();
        lg.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cls;
    private org.jdesktop.swingx.JXDatePicker date;
    private javax.swing.JComboBox from;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXTable jXTable1;
    private org.jdesktop.swingx.JXTable jXTable2;
    private org.jdesktop.swingx.JXTable jXTable3;
    private javax.swing.JComboBox to;
    // End of variables declaration//GEN-END:variables
}
